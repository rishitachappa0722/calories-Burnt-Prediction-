

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from xgboost import XGBRegressor
from sklearn import metrics


# loading the data from csv file to a Pandas DataFrame
calories=pd.read_csv('/content/calories.csv')

# print 5 rows of the dataframe
calories.head()


exercise_data=pd.read_csv('/content/archive.zip')



exercise_data.head()





calories_data=pd.concat([exercise_data,calories['Calories']],axis=1)
calories_data.head()

calories_data.info()

calories_data.isnull().sum()

calories_data.describe()

sns.set()


sns.countplot(calories_data['Gender'])

sns.distplot(calories_data['Age'])

sns.displot(data=calories_data['Height (m)'])

sns.distplot(calories_data['Weight (kg)'])

finding Correlation in the dataset
1.positive Correlation
2.negative Correlation



# Convert 'Gender' column to numerical representation
calories_data['Gender'] = calories_data['Gender'].map({'Male': 0, 'Female': 1})

# Calculate correlation
correlation = calories_data.corr(numeric_only=True)

plt.figure(figsize=(10,10))
sns.heatmap(correlation,cbar=True,square=True,fmt='.1f',annot=True,annot_kws={'size':8})

calories_data.head()

calories_data = calories_data.dropna()
X=calories_data.drop(columns=['Calories', 'Workout_Type'],axis=1)
Y=calories_data['Calories']

print(X)

print(Y)

X_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=0.2,random_state=2)

print(X.shape,X_train.shape,X_test.shape)

model=XGBRegressor()

model.fit(X_train,Y_train)

test_data_prediction=model.predict(X_test)
print(test_data_prediction)


# Model Evaluation

# prediction on training data
training_data_prediction = model.predict(X_train)

mae=metrics.mean_absolute_error(Y_test,test_data_prediction)
print("Mean Absolute_error= ",mae)



